name: CI/CD Pipeline

on:
  push:
    branches: 
      - "main"
      - "develop"
  pull_request:
    branches: 
      - "main"
      - "develop"
  workflow_dispatch:      # Permite disparo manual, se desejar

jobs:
  # Exemplo de jobs de LINT, SAST e TEST (podem ser paralelos ou em sequência)
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install
        run: npm install
      - name: Lint
        run: npm run lint

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SAST
        run: npm run sast

  test:
    runs-on: ubuntu-latest
    needs: 
      - lint
      - security
    steps:
      - uses: actions/checkout@v3
      - name: Install
        run: npm install
      - name: Test
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Install
        run: npm install
      - name: Build
        run: npm run build
      # Exemplo: npm run release ou semantic-release

  ###################################################################
  # DEPLOY PARA STAGING
  # -> Executado automaticamente quando fizer push na branch 'develop'
  ###################################################################
  deploy_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment:
      name: staging
      url: https://staging.example.com

    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Staging
        env:
          STAGING_KEY: ${{ secrets.STAGING_DEPLOY_KEY }}
        run: |
          echo "Fazendo deploy em STAGING..."
          # Exemplo de comando:
          # npm run deploy-staging --key $STAGING_KEY

  ###################################################################
  # DEPLOY PARA PRODUÇÃO
  # -> Exige aprovação manual configurada no "environment: production"
  # -> Dispara automaticamente em push na branch 'main'
  ###################################################################
  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://app.example.com

    concurrency: production-deploy

    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Production
        env:
          PROD_KEY: ${{ secrets.PROD_DEPLOY_KEY }}
        run: |
          echo "Fazendo deploy em PRODUÇÃO..."
          # Exemplo de comando:
          # npm run deploy-production --key $PROD_KEY
